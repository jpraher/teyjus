Coding standards:
  All tabs are 2 spaces wide.  True tabs are not used.

  Don't align definitions for types, or variable initializations, so
  that they look pretty.  That is, don't do:
    let x =          1 in
    let reallylong = 2 in
    let foo =        bar 
  because it is hard to edit.


  Similarly, don't make pretty comments:
    (*******************
     *bleck            *
     * foo bar baz     *
     ******************)
  even if your editor does it for you, because they are hard to edit
  for people without that editor.

  Use camelCase for function and variable names.

  Function definitions should always take the form:
    let functionName arg1 ... argN =
      body

    except when pattern matching a single argument:
    
    let functionName = function
      (pattern) -> ...
    | (pattern) -> ...
  
    (note that some definitions use the less obvious
    let functionName = fun arg1 ... argN = body
    and are being changed.)

  Datatypes:
    All labels of a disjoint union refer at least in part to their type.
    That is, for example:
      type avar =
          FooVar
        | BarVar
    because it is common to find FooVar and BarVar in the code without
    mention of avar, and it is easier to remember that FooVar is a var
    and not a typevar.

    All datatypes use tuples to represent structured data.  Records
    are never used.  Accessor functions are defined for each datatype
    to access individual fields of the tuple, so that one never matches
    against a tuple to extract a single value.
