Disassembling from bytecode file: append.lp
Bytecode version: 3
Module name: append

LABEL               INSTRUCTION              OPERANDS

L3                  fail                     
append              switch_on_reg            #1, L1, L2
L1                  try                      #4, L2
                    trust_ext                #4, #1
                    try_me_else              #0, L3
L2                  switch_on_term           L4, L5, L6, L4
L4                  try_me_else              #4, L7
L0                  get_nil                  A1
                    pattern_unify_t          A2, A3
                    finish_unify             
                    proceed                  
L7                  trust_me                 #4
L6                  get_list                 A1
                    unify_variable_t         A5
                    unify_variable_t         A1
                    get_list                 A3
                    unify_value_t            A5
                    unify_variable_t         A3
                    finish_unify             
                    head_normalize_t         A1
                    head_normalize_t         A2
                    head_normalize_t         A3
                    execute_name             append
L5                  switch_on_constant       #1, <hash #0>

Global kind table:

Local kind table:

Type skeleton table:
0: ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> o)))

Global constant table: 
0: append (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #0

Local constant table: 

Hidden constant table: 

String table:

Implication Tables:

Hash tables:
0:
    Table size: 1
    Constants:
    nil -> L0

Import tables:

  Import table:
    number of code segments: 0
    Next clause table: 1
   append
    Local constant table: 0
    Find function type: hash
    Search table: 1
   append

Accumulated tables:

Imported tables:
