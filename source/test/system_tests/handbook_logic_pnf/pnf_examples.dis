Disassembling from bytecode file: pnf_examples.lpo
Bytecode version: 2
Module name: pnf_examples

LABEL               INSTRUCTION              OPERANDS

L1                  fail                     
                    try_me_else              #0, L1
<local const #0>    switch_on_term           L2, L3, L1, L2
L2                  try_me_else              #2, L4
L7                  get_integer              A1, 1
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A255
                    unify_m_constant         tru
                    get_m_structure          A255, all, #1
                    unify_variable_t         A255
                    put_m_const              A252, path
                    put_app                  A253, A252, #2
                    set_m_const              a
                    set_index                #1
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L4                  retry_me_else            #2, L5
L8                  get_integer              A1, 2
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A255
                    unify_m_constant         tru
                    get_m_structure          A255, some, #1
                    unify_variable_t         A255
                    put_m_const              A252, path
                    put_app                  A253, A252, #2
                    set_m_const              a
                    set_index                #1
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L5                  retry_me_else            #2, L6
L9                  get_integer              A1, 3
                    get_m_structure          A2, and, #2
                    unify_variable_t         A255
                    unify_variable_t         A254
                    get_m_structure          A255, all, #1
                    unify_variable_t         A255
                    put_m_const              A251, path
                    put_app                  A252, A251, #2
                    set_m_const              a
                    set_index                #1
                    put_lambda               A253, A252, #1
                    pattern_unify_t          A253, A255
                    get_m_structure          A254, all, #1
                    unify_variable_t         A255
                    put_m_const              A252, path
                    put_app                  A253, A252, #2
                    set_index                #1
                    set_m_const              a
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L6                  trust_me                 #2
L10                 get_integer              A1, 4
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A255
                    unify_variable_t         A254
                    get_m_structure          A255, some, #1
                    unify_variable_t         A255
                    put_m_const              A251, path
                    put_app                  A252, A251, #2
                    set_m_const              a
                    set_index                #1
                    put_lambda               A253, A252, #1
                    pattern_unify_t          A253, A255
                    get_m_structure          A254, all, #1
                    unify_variable_t         A255
                    put_m_const              A252, path
                    put_app                  A253, A252, #2
                    set_m_const              a
                    set_index                #1
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L0                  try                      #2, L7
                    retry                    #2, L8
                    retry                    #2, L9
                    trust                    #2, L10
L3                  switch_on_constant       #1, <hash #0>
                    try_me_else              #0, L1
test                allocate                 #3
                    get_variable_p           Y1, A2
                    head_normalize_t         A1
                    put_variable_p           Y2, A2
                    call_link_only           #2, <local const #0>
                    put_unsafe_value         Y2, A1
                    head_normalize_t         A1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    deallocate               
                    execute_link_only        <local const #1>

Global kind table:
0: term/0
1: form/0

Local kind table:

Type skeleton table:
0: (int -> (form -> o))
1: (form -> (form -> o))
2: (form -> o)
3: (term -> o)
4: ((term -> form) -> form)
5: (term -> (term -> form))
6: term
7: (form -> (form -> form))
8: form
9: (term -> term)

Global constant table: 
0: all (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
1: path (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
2: a (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
3: imp (Infixr, precedence 110)
    Env Size: 0, Type Skeleton: #7
4: tru (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
5: some (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
6: and (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #7
7: test (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
8: b (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
9: c (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
10: f (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
11: adj (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
12: perp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
13: or (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #7

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
2:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
3:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
4:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2

Hidden constant table: 

String table:

Implication Tables:

Hash tables:
0:
    Table size: 1
    Constants:
    <int_constant> -> L0

Module table:
  Predicate definitions possibly extending previous ones: 0
  Exportdef predicates: 1
   test
  Local predicates: 1
   <local const #0>
  Find function type: hash
  In-core table size: 2
   <local const #0>
   test

Accumulated tables:
0: pnf
    Kind renamings:
    term -> term
    form -> form
    Constant renamings:
    termp -> <local const #3>
    quant_free -> <local const #2>
    prenex -> <local const #1>
    perp -> perp
    tru -> tru
    and -> and
    or -> or
    imp -> imp
    all -> all
    some -> some
1: refl_syntax
    Kind renamings:
    term -> term
    form -> form
    Constant renamings:
    termp -> <local const #3>
    atom -> <local const #4>
    quant_free -> <local const #2>
    a -> a
    b -> b
    c -> c
    f -> f
    path -> path
    adj -> adj
    perp -> perp
    tru -> tru
    and -> and
    or -> or
    imp -> imp
    all -> all
    some -> some

Imported tables:
