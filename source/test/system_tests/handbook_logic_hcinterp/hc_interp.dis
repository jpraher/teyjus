Disassembling from bytecode file: hc_interp.lpo
Bytecode version: 2
Module name: hc_interp

LABEL               INSTRUCTION              OPERANDS

L4                  fail                     
hc_interp           try_me_else              #2, L0
                    get_m_structure          A2, some, #1
                    unify_variable_t         A2
                    finish_unify             
                    neck_cut                 
                    put_value_t              A2, A3
                    head_normalize_t         A1
                    put_app                  A2, A3, #1
                    set_variable_t           A255
                    head_normalize_t         A2
                    execute_link_only        hc_interp
L0                  retry_me_else            #2, L1
                    allocate                 #3
                    get_variable_p           Y1, A1
                    get_m_structure          A2, and, #2
                    unify_variable_t         A1
                    unify_variable_p         Y2
                    finish_unify             
                    neck_cut                 
                    put_value_t              A1, A2
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    head_normalize_t         A2
                    call_link_only           #2, hc_interp
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    put_value_p              Y2, A2
                    head_normalize_t         A2
                    deallocate               
                    execute_link_only        hc_interp
L1                  retry_me_else            #2, L2
                    get_m_structure          A2, or, #2
                    unify_variable_t         A2
                    unify_variable_t         A3
                    finish_unify             
                    neck_cut                 
                    put_value_t              A1, A4
                    put_value_t              A2, A5
                    put_value_t              A3, A6
                    put_value_t              A5, A1
                    head_normalize_t         A1
                    put_value_t              A6, A2
                    head_normalize_t         A2
                    put_value_t              A4, A3
                    head_normalize_t         A3
                    execute                  L3
L2                  trust_me                 #2
                    head_normalize_t         A1
                    head_normalize_t         A2
                    execute_link_only        <local const #0>
                    try_me_else              #0, L4
<local const #0>    allocate                 #4
                    get_variable_p           Y1, A1
                    get_variable_p           Y2, A2
                    put_type_const           A3, form
                    put_variable_p           Y3, A1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #3, <local const #2>
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    put_unsafe_value         Y3, A2
                    head_normalize_t         A2
                    put_value_p              Y2, A3
                    head_normalize_t         A3
                    deallocate               
                    execute_link_only        <local const #1>
<local const #1>    try_me_else              #3, L5
                    get_m_structure          A2, and, #2
                    unify_variable_t         A2
                    unify_variable_t         A4
                    finish_unify             
                    neck_cut                 
                    put_value_t              A1, A5
                    put_value_t              A2, A6
                    put_value_t              A3, A7
                    put_value_t              A4, A8
                    put_value_t              A6, A1
                    head_normalize_t         A1
                    put_value_t              A7, A2
                    head_normalize_t         A2
                    put_value_t              A8, A3
                    head_normalize_t         A3
                    put_value_t              A5, A4
                    head_normalize_t         A4
                    execute                  L6
L5                  retry_me_else            #3, L7
                    get_m_structure          A2, all, #1
                    unify_variable_t         A2
                    finish_unify             
                    neck_cut                 
                    put_value_t              A2, A4
                    head_normalize_t         A1
                    put_app                  A2, A4, #1
                    set_variable_t           A255
                    head_normalize_t         A2
                    head_normalize_t         A3
                    execute_link_only        <local const #1>
L7                  retry_me_else            #3, L8
                    pattern_unify_t          A2, A3
                    finish_unify             
                    proceed                  
L8                  trust_me                 #3
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A2
                    unify_local_value_t      A3
                    finish_unify             
                    head_normalize_t         A1
                    head_normalize_t         A2
                    execute_link_only        hc_interp
L6                  try_me_else              #4, L9
                    put_value_t              A1, A5
                    put_value_t              A2, A3
                    put_value_t              A4, A1
                    head_normalize_t         A1
                    put_value_t              A5, A2
                    head_normalize_t         A2
                    head_normalize_t         A3
                    execute_link_only        <local const #1>
L9                  trust_me                 #4
                    put_value_t              A2, A5
                    put_value_t              A3, A6
                    put_value_t              A4, A1
                    head_normalize_t         A1
                    put_value_t              A6, A2
                    head_normalize_t         A2
                    put_value_t              A5, A3
                    head_normalize_t         A3
                    execute_link_only        <local const #1>
L3                  try_me_else              #3, L10
                    put_value_t              A1, A2
                    put_value_t              A3, A1
                    head_normalize_t         A1
                    head_normalize_t         A2
                    execute_link_only        hc_interp
L10                 trust_me                 #3
                    put_value_t              A3, A1
                    head_normalize_t         A1
                    head_normalize_t         A2
                    execute_link_only        hc_interp

Global kind table:
0: term/0
1: form/0

Local kind table:
0: /2

Type skeleton table:
0: ((list form) -> (form -> o))
1: ((list form) -> (form -> (form -> o)))
2: (SkeletonVarType(0) -> ((list SkeletonVarType(0)) -> o))
3: (SkeletonVarType(1) -> (SkeletonVarType(0) -> ( SkeletonVarType(0) SkeletonVarType(1))))
4: ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> o))
5: ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> o)))
6: (SkeletonVarType(0) -> (SkeletonVarType(1) -> ((list ( SkeletonVarType(1) SkeletonVarType(0))) -> o)))
7: ((list ( SkeletonVarType(0) SkeletonVarType(1))) -> ((list SkeletonVarType(1)) -> o))
8: ((list ( SkeletonVarType(0) SkeletonVarType(1))) -> ((list SkeletonVarType(0)) -> o))
9: ((term -> form) -> form)
10: (form -> (form -> form))
11: term
12: (term -> term)
13: (term -> (term -> form))
14: form

Global constant table: 
0: hc_interp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1: some (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
2: and (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #10
3: or (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #10
4: all (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
5: imp (Infixr, precedence 110)
    Env Size: 0, Type Skeleton: #10
6: a (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #11
7: b (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #11
8: c (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #11
9: f (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #12
10: path (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #13
11: adj (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #13
12: perp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #14
13: tru (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #14

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
2:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #2
3:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
4:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #4
5:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #2
6:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #5
7:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #5
8:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #6
9:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #7
10:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #8

Hidden constant table: 

String table:

Implication Tables:

Hash tables:

Module table:
  Predicate definitions possibly extending previous ones: 0
  Exportdef predicates: 1
   hc_interp
  Local predicates: 2
   <local const #0>
   <local const #1>
  Find function type: hash
  In-core table size: 3
   <local const #0>
   <local const #1>
   hc_interp

Accumulated tables:
0: lists
    Kind renamings:
    pairty -> <local kind #0>
    Constant renamings:
    pair -> <local const #3>
    id -> <local const #4>
    memb -> <local const #2>
    member -> <local const #5>
    append -> <local const #6>
    join -> <local const #7>
    assoc -> <local const #8>
    domain -> <local const #9>
    range -> <local const #10>

Imported tables:
