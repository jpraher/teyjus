Disassembling from bytecode file: tr_test.lpo
Bytecode version: 2
Module name: tr_test

LABEL               INSTRUCTION              OPERANDS

L2                  fail                     
tr_test             switch_on_reg            #1, L0, L1
L0                  try                      #2, L1
                    trust_ext                #2, #1
                    try_me_else              #0, L2
L1                  allocate                 #2
                    get_variable_p           Y1, A2
                    head_normalize_t         A1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #1, <local const #0>
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        tailrec

Global kind table:
0: tm/0

Local kind table:

Type skeleton table:
0: (string -> (tm -> o))
1: (tm -> o)
2: ((tm -> tm) -> tm)
3: (tm -> (tm -> tm))
4: (tm -> (tm -> (tm -> tm)))
5: (int -> tm)
6: tm

Global constant table: 
0: tailrec (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
1: tr_test (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
2: term (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
3: fn (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
4: @ (Infixl, precedence 6)
    Env Size: 0, Type Skeleton: #3
5: fixpt (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
6: cond (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
7: in (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
8: and (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
9: or (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
10: false (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
11: truth (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
12: car (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
13: cdr (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
14: cons (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
15: nullp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
16: consp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
17: empty (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
18: equal (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
19: greater (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
20: zerop (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
21: minus (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
22: plus (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
23: times (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0

Hidden constant table: 

String table:

Implication Tables:

Hash tables:

Module table:
  Predicate definitions possibly extending previous ones: 1
   tr_test
  Exportdef predicates: 1
   tailrec
  Local predicates: 0
  Find function type: hash
  In-core table size: 1
   tr_test

Accumulated tables:
0: examples
    Kind renamings:
    tm -> tm
    Constant renamings:
    prog -> <local const #0>
    fn -> fn
    @ -> @
    fixpt -> fixpt
    cond -> cond
    in -> in
    and -> and
    or -> or
    false -> false
    truth -> truth
    car -> car
    cdr -> cdr
    cons -> cons
    nullp -> nullp
    consp -> consp
    empty -> empty
    equal -> equal
    greater -> greater
    zerop -> zerop
    minus -> minus
    plus -> plus
    times -> times
1: tailrec
    Kind renamings:
    tm -> tm
    Constant renamings:
    term -> term
    tailrec -> tailrec
    fn -> fn
    @ -> @
    fixpt -> fixpt
    cond -> cond
    in -> in
    and -> and
    or -> or
    false -> false
    truth -> truth
    car -> car
    cdr -> cdr
    cons -> cons
    nullp -> nullp
    consp -> consp
    empty -> empty
    equal -> equal
    greater -> greater
    zerop -> zerop
    minus -> minus
    plus -> plus
    times -> times

Imported tables:
