Disassembling from bytecode file: hcsyntax_examples.lpo
Bytecode version: 2
Module name: hcsyntax_examples

LABEL               INSTRUCTION              OPERANDS

L3                  fail                     
formula             switch_on_reg            #1, L1, L2
L1                  try                      #2, L2
                    trust_ext                #2, #1
                    try_me_else              #0, L3
L2                  switch_on_term           L4, L5, L3, L4
L4                  try_me_else              #2, L6
L12                 get_integer              A1, 1
                    get_m_structure          A2, some, #1
                    unify_variable_t         A255
                    put_m_const              A252, and
                    put_m_const              A250, path
                    put_app                  A251, A250, #2
                    set_m_const              a
                    set_index                #1
                    put_m_const              A249, path
                    put_app                  A250, A249, #2
                    set_index                #1
                    set_m_const              b
                    put_app                  A253, A252, #2
                    set_value_t              A251
                    set_value_t              A250
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L6                  retry_me_else            #2, L7
L13                 get_integer              A1, 2
                    get_m_structure          A2, some, #1
                    unify_variable_t         A255
                    put_m_const              A252, imp
                    put_m_const              A250, path
                    put_app                  A251, A250, #2
                    set_m_const              a
                    set_index                #1
                    put_m_const              A249, path
                    put_app                  A250, A249, #2
                    set_index                #1
                    set_m_const              b
                    put_app                  A253, A252, #2
                    set_value_t              A251
                    set_value_t              A250
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L7                  retry_me_else            #2, L8
L14                 get_integer              A1, 3
                    get_m_structure          A2, and, #2
                    unify_variable_t         A255
                    unify_variable_t         A254
                    get_m_structure          A255, path, #2
                    unify_m_constant         a
                    unify_m_constant         b
                    get_m_structure          A254, path, #2
                    unify_m_constant         b
                    unify_m_constant         a
                    finish_unify             
                    proceed                  
L8                  retry_me_else            #2, L9
L15                 get_integer              A1, 4
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A255
                    unify_variable_t         A254
                    get_m_structure          A255, path, #2
                    unify_m_constant         a
                    unify_m_constant         b
                    get_m_structure          A254, path, #2
                    unify_m_constant         b
                    unify_m_constant         a
                    finish_unify             
                    proceed                  
L9                  retry_me_else            #2, L10
L16                 get_integer              A1, 5
                    get_m_structure          A2, imp, #2
                    unify_variable_t         A255
                    unify_variable_t         A254
                    get_m_structure          A255, path, #2
                    unify_m_constant         a
                    unify_m_constant         b
                    get_m_structure          A254, adj, #2
                    unify_m_constant         a
                    unify_m_constant         b
                    finish_unify             
                    proceed                  
L10                 retry_me_else            #2, L11
L17                 get_integer              A1, 6
                    get_m_structure          A2, all, #1
                    unify_variable_t         A255
                    put_m_const              A252, all
                    put_m_const              A249, imp
                    put_m_const              A247, path
                    put_app                  A248, A247, #2
                    set_index                #2
                    set_index                #1
                    put_m_const              A246, adj
                    put_app                  A247, A246, #2
                    set_index                #2
                    set_index                #1
                    put_app                  A250, A249, #2
                    set_value_t              A248
                    set_value_t              A247
                    put_lambda               A251, A250, #1
                    put_app                  A253, A252, #1
                    set_value_t              A251
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L11                 trust_me                 #2
L18                 get_integer              A1, 7
                    get_m_structure          A2, all, #1
                    unify_variable_t         A255
                    put_m_const              A252, all
                    put_m_const              A249, imp
                    put_m_const              A247, imp
                    put_m_const              A245, path
                    put_app                  A246, A245, #2
                    set_index                #2
                    set_index                #1
                    put_m_const              A244, adj
                    put_app                  A245, A244, #2
                    set_index                #2
                    set_index                #1
                    put_app                  A248, A247, #2
                    set_value_t              A246
                    set_value_t              A245
                    put_m_const              A246, adj
                    put_app                  A247, A246, #2
                    set_index                #2
                    set_index                #1
                    put_app                  A250, A249, #2
                    set_value_t              A248
                    set_value_t              A247
                    put_lambda               A251, A250, #1
                    put_app                  A253, A252, #1
                    set_value_t              A251
                    put_lambda               A254, A253, #1
                    pattern_unify_t          A254, A255
                    finish_unify             
                    proceed                  
L0                  try                      #2, L12
                    retry                    #2, L13
                    retry                    #2, L14
                    retry                    #2, L15
                    retry                    #2, L16
                    retry                    #2, L17
                    trust                    #2, L18
L5                  switch_on_constant       #1, <hash #0>
test_goal           switch_on_reg            #2, L19, L20
L19                 try                      #2, L20
                    trust_ext                #2, #2
                    try_me_else              #0, L3
L20                 allocate                 #2
                    get_variable_p           Y1, A2
                    head_normalize_t         A1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_name                #1, formula
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #0>
test_defcl          switch_on_reg            #3, L21, L22
L21                 try                      #2, L22
                    trust_ext                #2, #3
                    try_me_else              #0, L3
L22                 allocate                 #2
                    get_variable_p           Y1, A2
                    head_normalize_t         A1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_name                #1, formula
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #1>

Global kind table:
0: term/0
1: form/0

Local kind table:

Type skeleton table:
0: (form -> o)
1: (term -> o)
2: (int -> (form -> o))
3: ((term -> form) -> form)
4: (term -> (term -> form))
5: term
6: (form -> (form -> form))
7: (term -> term)
8: form

Global constant table: 
0: formula (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
1: some (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
2: path (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
3: a (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
4: and (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #6
5: b (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
6: imp (Infixr, precedence 110)
    Env Size: 0, Type Skeleton: #6
7: adj (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
8: all (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
9: test_goal (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
10: test_defcl (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
11: c (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
12: f (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #7
13: perp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
14: tru (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
15: or (Infixr, precedence 120)
    Env Size: 0, Type Skeleton: #6

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
2:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
3:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
4:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0

Hidden constant table: 

String table:

Implication Tables:

Hash tables:
0:
    Table size: 1
    Constants:
    <int_constant> -> L0

Module table:
  Predicate definitions possibly extending previous ones: 3
   formula
   test_goal
   test_defcl
  Exportdef predicates: 0
  Local predicates: 0
  Find function type: hash
  In-core table size: 3
   formula
   test_goal
   test_defcl

Accumulated tables:
0: refl_syntax
    Kind renamings:
    term -> term
    form -> form
    Constant renamings:
    termp -> <local const #2>
    atom -> <local const #3>
    quant_free -> <local const #4>
    a -> a
    b -> b
    c -> c
    f -> f
    path -> path
    adj -> adj
    perp -> perp
    tru -> tru
    and -> and
    or -> or
    imp -> imp
    all -> all
    some -> some
1: hc_syntax
    Kind renamings:
    term -> term
    form -> form
    Constant renamings:
    termp -> <local const #2>
    atom -> <local const #3>
    goal -> <local const #0>
    def_clause -> <local const #1>
    perp -> perp
    tru -> tru
    and -> and
    or -> or
    imp -> imp
    all -> all
    some -> some

Imported tables:
