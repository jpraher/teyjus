Disassembling from bytecode file: tr2_test.lpo
Bytecode version: 2
Module name: tr2_test

LABEL               INSTRUCTION              OPERANDS

L1                  fail                     
                    try_me_else              #0, L1
test                switch_on_term           L2, L3, L1, L2
L2                  try_me_else              #2, L4
L7                  allocate                 #2
                    get_variable_p           Y1, A2
                    get_integer              A1, 1
                    finish_unify             
                    put_m_const              A1, trfact1
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #1, trm
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #0>
L4                  retry_me_else            #2, L5
L8                  allocate                 #2
                    get_variable_p           Y1, A2
                    get_integer              A1, 2
                    finish_unify             
                    put_m_const              A1, gcd2
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #1, trm
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #0>
L5                  retry_me_else            #2, L6
L9                  allocate                 #2
                    get_variable_p           Y1, A2
                    get_integer              A1, 3
                    finish_unify             
                    put_m_const              A1, appnd
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #1, trm
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #0>
L6                  trust_me                 #2
L10                 allocate                 #2
                    get_variable_p           Y1, A2
                    get_integer              A1, 4
                    finish_unify             
                    put_m_const              A1, trfact2
                    put_value_p              Y1, A2
                    head_normalize_t         A2
                    call_link_only           #1, trm
                    put_value_p              Y1, A1
                    head_normalize_t         A1
                    deallocate               
                    execute_link_only        <local const #0>
L0                  try                      #2, L7
                    retry                    #2, L8
                    retry                    #2, L9
                    trust                    #2, L10
L3                  switch_on_constant       #1, <hash #0>

Global kind table:
0: name/0
1: tm/0

Local kind table:

Type skeleton table:
0: (tm -> o)
1: (int -> (tm -> o))
2: (name -> (tm -> o))
3: name
4: (tm -> (tm -> (tm -> tm)))
5: ((tm -> tm) -> tm)
6: (int -> tm)
7: tm
8: (tm -> (tm -> tm))
9: (tm -> tm)

Global constant table: 
0: test (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #1
1: trm (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #2
2: trfact1 (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
3: gcd2 (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
4: appnd (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
5: trfact2 (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #3
6: cond (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #4
7: fix (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
8: c (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #6
9: truth (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #7
10: false (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #7
11: && (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
12: plus (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
13: minus (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
14: times (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
15: lss (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
16: eq (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
17: intp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
18: pr (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
19: prp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
20: fst (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
21: snd (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
22: null (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #7
23: cons (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8
24: hd (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
25: tl (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
26: nullp (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #9
27: err (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #7
28: abs (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #5
29: app (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #8

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0

Hidden constant table: 

String table:

Implication Tables:

Hash tables:
0:
    Table size: 1
    Constants:
    <int_constant> -> L0

Module table:
  Predicate definitions possibly extending previous ones: 0
  Exportdef predicates: 1
   test
  Local predicates: 0
  Find function type: hash
  In-core table size: 1
   test

Accumulated tables:
0: general_tr
    Kind renamings:
    tm -> tm
    Constant renamings:
    term -> <local const #1>
    tailrec -> <local const #0>
    cond -> cond
    fix -> fix
    c -> c
    truth -> truth
    false -> false
    && -> &&
    plus -> plus
    minus -> minus
    times -> times
    lss -> lss
    eq -> eq
    intp -> intp
    pr -> pr
    prp -> prp
    fst -> fst
    snd -> snd
    null -> null
    cons -> cons
    hd -> hd
    tl -> tl
    nullp -> nullp
    err -> err
    abs -> abs
    app -> app
1: terms
    Kind renamings:
    name -> name
    tm -> tm
    Constant renamings:
    trfact1 -> trfact1
    trfact2 -> trfact2
    gcd2 -> gcd2
    appnd -> appnd
    trm -> trm
    cond -> cond
    fix -> fix
    c -> c
    truth -> truth
    false -> false
    && -> &&
    plus -> plus
    minus -> minus
    times -> times
    lss -> lss
    eq -> eq
    intp -> intp
    pr -> pr
    prp -> prp
    fst -> fst
    snd -> snd
    null -> null
    cons -> cons
    hd -> hd
    tl -> tl
    nullp -> nullp
    err -> err
    abs -> abs
    app -> app

Imported tables:
