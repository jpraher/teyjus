Disassembling from bytecode file: funs.lp
Bytecode version: 1
Module name: funs
Bytes needed for strings: 28
Bytes needed for type skeletons: 632
Bytes needed for header information: 116
Bytes needed for code: 552
Predicate search function type: hash
Number of segments of clauses: 1

LABEL       INSTRUCTION                  OPERANDS

            fail
mapfun      switch_on_reg                1, L1, L2
L1          try_me_else                  #5, L13
L2          try_me_else                  #5, L5
            get_nil                      A2, L3
            unify_envty_l_value_t        A5
L3          get_nil                      A3, L4
            unify_envty_l_value_t        A4
L4          proceed_finish_unify
L5          trust_me                     #5
            allocate                     #1
            get_list                     A2, L6
            unify_envty_l_value_t        A5
L6          unify_p_variable_t           A6, <tyskel #13>, L7
            unify_envty_value_t          A5
L7          unify_p_variable_t           A2, <tyskel #14>, L8
            unify_envty_value_t          A5
L8          get_list                     A3, L9
            unify_envty_l_value_t        A4
L9          unify_variable_tty           A255, #1
            unify_p_variable_t           A3, <tyskel #14>, L10
            unify_envty_value_t          A4
L10         globalize_t                  A1
            put_capp                     A254, A1, #1
            set_value_t                  A6
            simpl_t                      A254, A255
            call_finish_unify            #0, #5
            add_imports                  #1, #0, L11
            push_import                  <import #0>
L11         call_name                    #0, mapfun
            remove_imports               #1, L12
            pop_imports                  #1
L12         deallocate
            proceed
L13         trust_ext                    #5, 1
foldr       switch_on_reg                2, L14, L15
L14         try_me_else                  #6, L23
L15         try_me_else                  #6, L17
            get_nil                      A3, L16
            unify_envty_l_value_t        A6
L16         simpl_t                      A2, A4
            proceed_finish_unify
L17         trust_me                     #6
            allocate                     #1
            get_list                     A3, L18
            unify_envty_l_value_t        A6
L18         unify_p_variable_t           A7, <tyskel #13>, L19
            unify_envty_value_t          A6
L19         unify_p_variable_t           A3, <tyskel #14>, L20
            unify_envty_value_t          A6
L20         globalize_t                  A1
            put_capp                     A255, A1, #2
            set_value_t                  A7
            set_p_variable_t             A7, <tyskel #13>, #1
            set_type_l_value_t           A5
            simpl_t                      A255, A4
            call_finish_unify            #0, #7
            add_imports                  #1, #0, L21
            push_import                  <import #0>
L21         put_value_t                  A7, A4
            call_name                    #0, foldr
            remove_imports               #1, L22
            pop_imports                  #1
L22         deallocate
            proceed
L23         trust_ext                    #6, 2
foldl       switch_on_reg                3, L24, L25
L24         try_me_else                  #6, L33
L25         try_me_else                  #6, L27
            get_nil                      A3, L26
            unify_envty_l_value_t        A6
L26         simpl_t                      A2, A4
            proceed_finish_unify
L27         trust_me                     #6
            allocate                     #1
            get_list                     A3, L28
            unify_envty_l_value_t        A6
L28         unify_p_variable_t           A7, <tyskel #13>, L29
            unify_envty_value_t          A6
L29         unify_p_variable_t           A3, <tyskel #14>, L30
            unify_envty_value_t          A6
L30         globalize_t                  A1
            put_capp                     A255, A1, #2
            set_p_variable_t             A8, <tyskel #13>, #1
            set_type_l_value_t           A5
            set_value_t                  A7
            simpl_t                      A255, A4
            call_finish_unify            #0, #8
            add_imports                  #1, #0, L31
            push_import                  <import #0>
L31         put_value_t                  A8, A4
            call_name                    #0, foldl
            remove_imports               #1, L32
            pop_imports                  #1
L32         deallocate
            proceed
L33         trust_ext                    #6, 3

Global kind table:

Local kind table:
0: /2

Type skeleton table:
0: [[t1]->t0, (list t1), (list t0)]->o
1: [[t1, t0]->t0, t0, (list t1), t0]->o
2: [[t0, t1]->t0, t0, (list t1), t0]->o
3: [t1, t0]->(<local kind #0> t1 t0)
4: [(list t0), (list t0)]->o
5: [t0, (list t0)]->o
6: [t0, (list t0)]->o
7: [(list t0), (list t0), (list t0)]->o
8: [(list t0), (list t0), (list t0)]->o
9: [t1, t0, (list (<local kind #0> t1 t0))]->o
10: [(list (<local kind #0> t0 t1)), (list t0)]->o
11: [(list (<local kind #0> t1 t0)), (list t0)]->o
12: [t1]->t0
13: t0
14: (list t0)
15: [t1, t0]->t0
16: [t1, t0]->t0
17: [t0, t1]->t0
18: [t0, t1]->t0

Global constant table:
0: mapfun (no fixity, precedence 0)
	Env size: 2, Type skeleton: #0 
1: foldr (no fixity, precedence 0)
	Env size: 2, Type skeleton: #1 
2: foldl (no fixity, precedence 0)
	Env size: 2, Type skeleton: #2 

Local constant table:
0:  (no fixity, precedence 0)
	Env size: 2, Type skeleton: #3
1:  (no fixity, precedence 0)
	Env size: 1, Type skeleton: #4
2:  (no fixity, precedence 0)
	Env size: 1, Type skeleton: #5
3:  (no fixity, precedence 0)
	Env size: 1, Type skeleton: #6
4:  (no fixity, precedence 0)
	Env size: 1, Type skeleton: #7
5:  (no fixity, precedence 0)
	Env size: 1, Type skeleton: #8
6:  (no fixity, precedence 0)
	Env size: 2, Type skeleton: #9
7:  (no fixity, precedence 0)
	Env size: 2, Type skeleton: #10
8:  (no fixity, precedence 0)
	Env size: 2, Type skeleton: #11

Import tables:
0: lists
	Kind renamings:
	pairty -> <local kind #0>
	Constant renamings:
	range -> <local constant #8>
	domain -> <local constant #7>
	assoc -> <local constant #6>
	join -> <local constant #5>
	append -> <local constant #4>
	member -> <local constant #3>
	memb -> <local constant #2>
	id -> <local constant #1>
	pair -> <local constant #0>

String table:

Hidden constant table:

Implication Tables:

Hash tables:

Bound variable indexing tables:
