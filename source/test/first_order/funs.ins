Disassembling from bytecode file: funs.mod.lp
Bytecode version: 2
Module name: funs
Bytes needed for code: 880

LABEL               INSTRUCTION              OPERANDS

                    fail                     
mapfun              switch_on_reg            #1, L0, L1
L0                  try_me_else              #5, L2
L1                  try_me_else              #5, L3
                    get_nil                  A2
                    get_nil                  A3
                    finish_unify             
                    proceed                  
L3                  trust_me                 #5
                    allocate                 #1
                    get_list                 A2
                    unify_variable_t         A6
                    unify_variable_t         A2
                    get_list                 A3
                    unify_variable_t         A255
                    unify_variable_t         A3
                    globalize_t              A1
                    put_app                  A254, A1, #1
                    set_value_t              A6
                    pattern_unify_t          A254, A255
                    finish_unify             
                    add_imports              #1, #0, L4
                    push_import              <import #0>
L4                  call_name                #0, mapfun
                    remove_imports           #1, L5
                    pop_imports              #1
L5                  deallocate               
                    proceed                  
L2                  trust_ext                #5, #1
foldr               switch_on_reg            #2, L6, L7
L6                  try_me_else              #6, L8
L7                  try_me_else              #6, L9
                    get_nil                  A3
                    pattern_unify_t          A2, A4
                    finish_unify             
                    proceed                  
L9                  trust_me                 #6
                    allocate                 #1
                    get_list                 A3
                    unify_variable_t         A7
                    unify_variable_t         A3
                    globalize_t              A1
                    put_app                  A255, A1, #2
                    set_value_t              A7
                    set_variable_t           A7
                    pattern_unify_t          A255, A4
                    finish_unify             
                    add_imports              #1, #0, L10
                    push_import              <import #0>
L10                 put_value_t              A7, A4
                    call_name                #0, foldr
                    remove_imports           #1, L11
                    pop_imports              #1
L11                 deallocate               
                    proceed                  
L8                  trust_ext                #6, #2
foldl               switch_on_reg            #3, L12, L13
L12                 try_me_else              #6, L14
L13                 try_me_else              #6, L15
                    get_nil                  A3
                    pattern_unify_t          A2, A4
                    finish_unify             
                    proceed                  
L15                 trust_me                 #6
                    allocate                 #1
                    get_list                 A3
                    unify_variable_t         A7
                    unify_variable_t         A3
                    globalize_t              A1
                    put_app                  A255, A1, #2
                    set_variable_t           A8
                    set_value_t              A7
                    pattern_unify_t          A255, A4
                    finish_unify             
                    add_imports              #1, #0, L16
                    push_import              <import #0>
L16                 put_value_t              A8, A4
                    call_name                #0, foldl
                    remove_imports           #1, L17
                    pop_imports              #1
L17                 deallocate               
                    proceed                  
L14                 trust_ext                #6, #3

Global kind table:

Local kind table:
0: /2

Type skeleton table:
0: (SkeletonVarType(1) -> (SkeletonVarType(0) -> ( SkeletonVarType(0) SkeletonVarType(1))))
1: ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> o))
2: (SkeletonVarType(0) -> ((list SkeletonVarType(0)) -> o))
3: ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> ((list SkeletonVarType(0)) -> o)))
4: (SkeletonVarType(0) -> (SkeletonVarType(1) -> ((list ( SkeletonVarType(1) SkeletonVarType(0))) -> o)))
5: ((list ( SkeletonVarType(0) SkeletonVarType(1))) -> ((list SkeletonVarType(1)) -> o))
6: ((list ( SkeletonVarType(0) SkeletonVarType(1))) -> ((list SkeletonVarType(0)) -> o))
7: ((SkeletonVarType(0) -> SkeletonVarType(1)) -> ((list SkeletonVarType(0)) -> ((list SkeletonVarType(1)) -> o)))
8: ((SkeletonVarType(0) -> (SkeletonVarType(1) -> SkeletonVarType(1))) -> (SkeletonVarType(1) -> ((list SkeletonVarType(0)) -> (SkeletonVarType(1) -> o))))
9: ((SkeletonVarType(0) -> (SkeletonVarType(1) -> SkeletonVarType(0))) -> (SkeletonVarType(0) -> ((list SkeletonVarType(1)) -> (SkeletonVarType(0) -> o))))

Global constant table: 
0: mapfun (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #7
1: foldr (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #8
2: foldl (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #9

Local constant table: 
0:  (No Fixity, precedence 0)
    Env Size: 0, Type Skeleton: #0
1:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #1
2:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #2
3:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #2
4:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #3
5:  (No Fixity, precedence 0)
    Env Size: 1, Type Skeleton: #3
6:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #4
7:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #5
8:  (No Fixity, precedence 0)
    Env Size: 2, Type Skeleton: #6

Hidden constant table: 

String table:

Implication Tables:

Hash tables:

Module table:
  Predicate definitions possibly extending previous ones: 3
   mapfun
   foldr
   foldl
  Find function type: hash
  In-core table size: 3
   mapfun
   foldr
   foldl

Accumulated tables:

Imported tables:
0: lists
    Kind renamings:
    pairty -> <local kind #0>
    Constant renamings:
    range -> <local const #8>
    domain -> <local const #7>
    assoc -> <local const #6>
    join -> <local const #5>
    append -> <local const #4>
    member -> <local const #3>
    memb -> <local const #2>
    id -> <local const #1>
    pair -> <local const #0>
