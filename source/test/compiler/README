compiler (and linker) tests:

1. How to test the compiler?
===========================
   .If the test is to be performed on individual test cases, use the
    command 
       "omake compiler-test" 
    under the subdirectory of source/test/compiler/<test_case>.

   .If the test is to be performed over all the existing test cases
    under the source/test/compiler directory, use the command
       "omake compiler-test"
    under source/test/compiler.

   The actual testing is performed in the following steps:
    a. the compiler is re-compiled if necessary;
    b. the .lpo files for the modules in a test case directory are generated
       by using "tjcc <modname>";
    c. the .dis-actual files for the .lpo files in a test case directory
       are generated by using "tjdis <modname>.lpo";
    d. the <modname>.dis-actual file is compared with the <modname>.dis
       file. 
       ** Note the set up of <modname>.dis files will be discussed in the 
          answer of the last question (How the add new test cases).
   

2. How to test the linker?
==========================
   .If the test is to be performed on individual test cases, use the
    command 
       "omake test" 
    under the subdirectory of source/test/compiler/<test_case>.

   .If the test is to be performed over all the existing test cases
    under the source/test/compiler directory, use the command
       "omake test"
    under source/test/compiler.

    The actual testing is performed in the following steps:
    a. the compiler and the linker is re-compiled if necessary;   
    b. the .lpo files for the modules in a test case directory are generated
       by using "tjcc <modname>" if necessary;
    c. a .lp file is generated by using "linker/tjlink <modname>" where
       <modname> is the name of the top-level module;
    d. the file of name actual is generated by using "tjdis -l <modname>.lp";
    e. the file actual is then compared with the file of name expected.
       ** Note the set up of the file expected will be discussed in the 
          answer of the last question (How the add new test cases).


3. How to add new test cases?
============================
   .Make a subdirectory in source/test/compiler/<test_case> and put .mod
    and .sig files for the top-level module and those of the modules 
    (recursively) imported or accumulated from the top-level module.
    ** Note: according to the current setting of the test suites, only one
             top-level module can appear in each test case directory.

   .If the name given to the test case directory (<test_case>) is different
    from the name of the top-level module, put a file root.om with a line
    as "ROOT = <top-level module name>" along with the lambdaProlog files.
    (The default top-level module name needed in linking is the name of the 
     test case directory and can be by root.om.)

   .Set up .dis files 
    -----------------
     Use the command "omake update-compiler-test" under the directory 
     of source/test/compiler/<test_case> for an individual test case or
     the same command under source/test/compiler for all the existing 
     test cases.

     ** Note that the .dis files should be manually inspected before actually
        being used as the standards for testing.


   .Set up files of name expected
    -----------------------------
     Use the command "omake update-test" under the directory 
     of source/test/compiler/<test_case> for an individual test case or
     the same command under source/test/compiler for all the existing 
     test cases.
    
     ** Again, note that the expected files should be manually inspected 
        before actually being used as the standards for testing.

